[{"categories":null,"content":" Jul 27, 2019 Myojin Pond ÊòéÁ•ûÊ±† Aug 12, 2023 Somewhere in Aichi ÊÑõÁü•„ÅÆÊüêÂú∞ ","date":"Sun, Sep 3, 2023","objectID":"/gallery/:0:0","series":null,"tags":null,"title":"Gallery","uri":"/gallery/#"},{"categories":["Tutorial"],"content":" BackgroundUsually, in order to utilize GitHub Pages for free hosting my Hugo site, I have to make the repository public. However, this also implies that even my draft posts will become visible in the public site repository. That is definitely not the way I prefer to do this. ","date":"Tue, Aug 29, 2023","objectID":"/posts/how-to-host-hugo-site-from-private-repository/:1:0","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to host Hugo site from private repository","uri":"/posts/how-to-host-hugo-site-from-private-repository/#background"},{"categories":["Tutorial"],"content":" SolutionAfter some searching, I found out that I can hide my draft posts and publish only the static site to the public repository by using GitHub Actions: ","date":"Tue, Aug 29, 2023","objectID":"/posts/how-to-host-hugo-site-from-private-repository/:2:0","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to host Hugo site from private repository","uri":"/posts/how-to-host-hugo-site-from-private-repository/#solution"},{"categories":["Tutorial"],"content":" Prerequisites A private repository(Just turn the present public repository of Hugo site into private repository) A newly created public repository to publish Hugo site GitHub Personal token Create a GitHub personal token Click on your GitHub avatar in top-right and open Settings page. Click on Developer settings(at the bottom of the page). Click on Personal access tokens -\u003e Tokens(classic) -\u003e Generate new token -\u003e Generate new token(classic). Use personal token Personal token is required because we need the permission to access to a external repository. Add a note for token. Select expiration. Select scopes: ‚úÖ workflow ‚úÖ write:packages Click on Generate toke. Copy the token start with ghp_ Add GitHub personal token to private repository Open the Settings of private repository. Click on Secrets and variables -\u003e Actions Click on New repository secret Add name then paste the token to the Secret area. Click on Add secret ","date":"Tue, Aug 29, 2023","objectID":"/posts/how-to-host-hugo-site-from-private-repository/:2:1","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to host Hugo site from private repository","uri":"/posts/how-to-host-hugo-site-from-private-repository/#prerequisites"},{"categories":["Tutorial"],"content":" Prerequisites A private repository(Just turn the present public repository of Hugo site into private repository) A newly created public repository to publish Hugo site GitHub Personal token Create a GitHub personal token Click on your GitHub avatar in top-right and open Settings page. Click on Developer settings(at the bottom of the page). Click on Personal access tokens -\u003e Tokens(classic) -\u003e Generate new token -\u003e Generate new token(classic). Use personal token Personal token is required because we need the permission to access to a external repository. Add a note for token. Select expiration. Select scopes: ‚úÖ workflow ‚úÖ write:packages Click on Generate toke. Copy the token start with ghp_ Add GitHub personal token to private repository Open the Settings of private repository. Click on Secrets and variables -\u003e Actions Click on New repository secret Add name then paste the token to the Secret area. Click on Add secret ","date":"Tue, Aug 29, 2023","objectID":"/posts/how-to-host-hugo-site-from-private-repository/:2:1","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to host Hugo site from private repository","uri":"/posts/how-to-host-hugo-site-from-private-repository/#create-a-github-personal-token"},{"categories":["Tutorial"],"content":" Prerequisites A private repository(Just turn the present public repository of Hugo site into private repository) A newly created public repository to publish Hugo site GitHub Personal token Create a GitHub personal token Click on your GitHub avatar in top-right and open Settings page. Click on Developer settings(at the bottom of the page). Click on Personal access tokens -\u003e Tokens(classic) -\u003e Generate new token -\u003e Generate new token(classic). Use personal token Personal token is required because we need the permission to access to a external repository. Add a note for token. Select expiration. Select scopes: ‚úÖ workflow ‚úÖ write:packages Click on Generate toke. Copy the token start with ghp_ Add GitHub personal token to private repository Open the Settings of private repository. Click on Secrets and variables -\u003e Actions Click on New repository secret Add name then paste the token to the Secret area. Click on Add secret ","date":"Tue, Aug 29, 2023","objectID":"/posts/how-to-host-hugo-site-from-private-repository/:2:1","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to host Hugo site from private repository","uri":"/posts/how-to-host-hugo-site-from-private-repository/#add-github-personal-token-to-private-repository"},{"categories":["Tutorial"],"content":" GitHug workflow configurationsHere is the workflow configuration file I made for my Hugo site: # Workflow for building and deploying a Hugo site to GitHub Pages name: Build \u0026 Deploy Hugo site From private repository to public repository on: push: branches: - main # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-22.04 permissions: contents: write concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: '0.115.3' # Hugo version I'm using. Or use latest version by set value to 'latest'. extended: true - name: Build run: hugo --minify # Minify build result - name: Deploy to public repository uses: peaceiris/actions-gh-pages@v3 if: github.ref == 'refs/heads/main' with: personal_token: ${{ secrets.PERSONAL_TOKEN }} external_repository: kevinzch/KEDIGA_Public # Public repository to deploy publish_branch: main publish_dir: ./public cname: kediga.com # Domain of site Replace the configuration file under .github/workflows with it. Then push the changes to private repository and check whether the workflow runs successfully. ","date":"Tue, Aug 29, 2023","objectID":"/posts/how-to-host-hugo-site-from-private-repository/:2:2","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to host Hugo site from private repository","uri":"/posts/how-to-host-hugo-site-from-private-repository/#githug-workflow-configurations"},{"categories":["Tutorial"],"content":" ConclusionThis way, I can push all the content, including draft posts, drawio files, and other files related to my site, to my private repository without worrying about they being made public. ","date":"Tue, Aug 29, 2023","objectID":"/posts/how-to-host-hugo-site-from-private-repository/:3:0","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to host Hugo site from private repository","uri":"/posts/how-to-host-hugo-site-from-private-repository/#conclusion"},{"categories":["Tutorial"],"content":" References Using GitHub Actions to Publish Hugo Site From Private to Public Repo. Deploy Hugo From Private Repository to GitHub Pages actions-gh-pages GitHub Actions documentation If you have any questions or advice, leave me a comment below and I will try my best to respond! ","date":"Tue, Aug 29, 2023","objectID":"/posts/how-to-host-hugo-site-from-private-repository/:4:0","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to host Hugo site from private repository","uri":"/posts/how-to-host-hugo-site-from-private-repository/#references"},{"categories":null,"content":"Hello there!üëã ","date":"Wed, Jul 19, 2023","objectID":"/about/:0:0","series":null,"tags":null,"title":"About","uri":"/about/#"},{"categories":["Tutorial"],"content":" BackgroundI have had more spare time since I changed my job earlier this year. I have been contemplating ways to share my life and technology experiences while also enhancing my writing skills. Although Wordpress appears to be a quite popular platform for personal blogs, I‚Äôd rather not deal with ongoing expenses for servers or disruptions caused by irrelevant technical tasks like virtual machine and database configurations. That‚Äôs why using an open source Static Site Generator along with a free web hosting service seems like the ideal approach for me. Here are the tools I used: Hugo: An open source Static Site Generator written in Go that allows you to create fast and flexible websites such as personal blogs, company homepages, galleries and many more. GitHub Pages: A free web hosting service provided by GitHub that allows you to host your site directly from your GitHub repository. In the end, I built this site to serve as my personal blog by following the documentations of those tools. I decided to document the entire process as a future reference for myself, and for anyone else, like you, who happens to come across this post by chance. ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:1:0","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#background"},{"categories":["Tutorial"],"content":" InstallationThere are 3 other tools that required to be installed besides Hugo: Git, Go and Dart Sass. I installed these tools on both my Windows 10 PC and MacBook. ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:0","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#installation"},{"categories":["Tutorial"],"content":" Windows Install HugoI installed Chocolatey first since both Hugo and Sass can also be installed through Chocolatey easily. Install Chocolatey Open PowerShell as administrator and type: Get-ExecutionPolicy If it returns Restricted, run the following command: Set-ExecutionPolicy AllSigned Run the following command to install Chocolatey: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) Wait for the command to complete, then confirm Chocolatey has been installed correctly: choco -? After installing Chocolatey, install Hugo: choco install hugo-extended Install GitDownload the standalone installer from download page and install it. Install GoFollow this documentation to download and install Go. Install SassRun following command in PowerShell: choco install sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:1","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#windows"},{"categories":["Tutorial"],"content":" Windows Install HugoI installed Chocolatey first since both Hugo and Sass can also be installed through Chocolatey easily. Install Chocolatey Open PowerShell as administrator and type: Get-ExecutionPolicy If it returns Restricted, run the following command: Set-ExecutionPolicy AllSigned Run the following command to install Chocolatey: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) Wait for the command to complete, then confirm Chocolatey has been installed correctly: choco -? After installing Chocolatey, install Hugo: choco install hugo-extended Install GitDownload the standalone installer from download page and install it. Install GoFollow this documentation to download and install Go. Install SassRun following command in PowerShell: choco install sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:1","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#install-hugo"},{"categories":["Tutorial"],"content":" Windows Install HugoI installed Chocolatey first since both Hugo and Sass can also be installed through Chocolatey easily. Install Chocolatey Open PowerShell as administrator and type: Get-ExecutionPolicy If it returns Restricted, run the following command: Set-ExecutionPolicy AllSigned Run the following command to install Chocolatey: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) Wait for the command to complete, then confirm Chocolatey has been installed correctly: choco -? After installing Chocolatey, install Hugo: choco install hugo-extended Install GitDownload the standalone installer from download page and install it. Install GoFollow this documentation to download and install Go. Install SassRun following command in PowerShell: choco install sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:1","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#install-chocolatey"},{"categories":["Tutorial"],"content":" Windows Install HugoI installed Chocolatey first since both Hugo and Sass can also be installed through Chocolatey easily. Install Chocolatey Open PowerShell as administrator and type: Get-ExecutionPolicy If it returns Restricted, run the following command: Set-ExecutionPolicy AllSigned Run the following command to install Chocolatey: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) Wait for the command to complete, then confirm Chocolatey has been installed correctly: choco -? After installing Chocolatey, install Hugo: choco install hugo-extended Install GitDownload the standalone installer from download page and install it. Install GoFollow this documentation to download and install Go. Install SassRun following command in PowerShell: choco install sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:1","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#install-git"},{"categories":["Tutorial"],"content":" Windows Install HugoI installed Chocolatey first since both Hugo and Sass can also be installed through Chocolatey easily. Install Chocolatey Open PowerShell as administrator and type: Get-ExecutionPolicy If it returns Restricted, run the following command: Set-ExecutionPolicy AllSigned Run the following command to install Chocolatey: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) Wait for the command to complete, then confirm Chocolatey has been installed correctly: choco -? After installing Chocolatey, install Hugo: choco install hugo-extended Install GitDownload the standalone installer from download page and install it. Install GoFollow this documentation to download and install Go. Install SassRun following command in PowerShell: choco install sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:1","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#install-go"},{"categories":["Tutorial"],"content":" Windows Install HugoI installed Chocolatey first since both Hugo and Sass can also be installed through Chocolatey easily. Install Chocolatey Open PowerShell as administrator and type: Get-ExecutionPolicy If it returns Restricted, run the following command: Set-ExecutionPolicy AllSigned Run the following command to install Chocolatey: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')) Wait for the command to complete, then confirm Chocolatey has been installed correctly: choco -? After installing Chocolatey, install Hugo: choco install hugo-extended Install GitDownload the standalone installer from download page and install it. Install GoFollow this documentation to download and install Go. Install SassRun following command in PowerShell: choco install sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:1","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#install-sass"},{"categories":["Tutorial"],"content":" macOSInstall homebrew whether it is not installed yet. Install HugoOpen Terminal and run following command: brew install hugo Install GitRun following command: brew install git Install GoFollow this documentation to download and install Go. Install SassRun following command: brew install sass/sass/sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:2","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#macos"},{"categories":["Tutorial"],"content":" macOSInstall homebrew whether it is not installed yet. Install HugoOpen Terminal and run following command: brew install hugo Install GitRun following command: brew install git Install GoFollow this documentation to download and install Go. Install SassRun following command: brew install sass/sass/sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:2","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#install-hugo-1"},{"categories":["Tutorial"],"content":" macOSInstall homebrew whether it is not installed yet. Install HugoOpen Terminal and run following command: brew install hugo Install GitRun following command: brew install git Install GoFollow this documentation to download and install Go. Install SassRun following command: brew install sass/sass/sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:2","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#install-git-1"},{"categories":["Tutorial"],"content":" macOSInstall homebrew whether it is not installed yet. Install HugoOpen Terminal and run following command: brew install hugo Install GitRun following command: brew install git Install GoFollow this documentation to download and install Go. Install SassRun following command: brew install sass/sass/sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:2","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#install-go-1"},{"categories":["Tutorial"],"content":" macOSInstall homebrew whether it is not installed yet. Install HugoOpen Terminal and run following command: brew install hugo Install GitRun following command: brew install git Install GoFollow this documentation to download and install Go. Install SassRun following command: brew install sass/sass/sass ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:2:2","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#install-sass-1"},{"categories":["Tutorial"],"content":" Create a siteRun following commands in PowerShell or Terminal. Create the directory structure in the mysite directory: hugo new site mysite Change working directory to the root of mysite: cd mysite Create an empty Git repository in the working directory: git init Clone the DoIt theme to the theme directory, adding it to mysite as a Git submodule: git submodule add git submodule add https://github.com/HEIGE-PCloud/DoIt.git themes/DoIt themes/DoIt Apply theme: echo \"theme = 'DoIt'\" \u003e\u003e hugo.toml Now start Hugo‚Äôs development server and open the URL displayed in terminal to have a look at the site we created. hugo server Development server can be stopped by pressing Ctrl + C. ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:3:0","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#create-a-site"},{"categories":["Tutorial"],"content":" Add a post Add a new post to mysite: hugo new content posts/my-first-post.md A markdown file was created in content/posts directory by Hugo. Open the file: --- title: \"My First Post\" date: 2023-07-19T17:51:29+09:00 draft: true --- Add some content to the body of the post and save the file. --- title: \"My First Post\" date: 2023-07-19T17:51:29+09:00 draft: true --- ## Introduction Hello! This is my first post. Start Hugo‚Äôs development server again and have a look at the post: hugo server -D ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:4:0","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#add-a-post"},{"categories":["Tutorial"],"content":" Host on GitHub Pages A GitHub account is required for hosting site on GitHub Pages. Sign up an account if you don‚Äôt already have one. Create a new repository. Usually, a Pro(paid) account is needed to host site from private repository. Create a public repository if you want to host your site free.1 Push local repository of mysite to GitHub: git remote add origin git@github.com:$GitHubUserName/$RepositoryName.git git branch -M main git push -u origin main Open GitHub repository page. Click on Settings \u003e Pages. Change the Source to GitHub Actions. Create an empty file in local repository. .github/workflows/hugo.yaml Copy and paste the following YAML into the file created in step6. Change the branch name and Hugo version.(If you used the command in step3, the branch name should be main. And Hugo version can be confirmed by running hugo version in Terminal. It is better to use the same version in both local and remote repository.) # Sample workflow for building and deploying a Hugo site to GitHub Pages name: Deploy Hugo site to Pages on: # Runs on pushes targeting the default branch push: branches: - main # Allows you to run this workflow manually from the Actions tab workflow_dispatch: # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued. # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete. concurrency: group: \"pages\" cancel-in-progress: false # Default to bash defaults: run: shell: bash jobs: # Build job build: runs-on: ubuntu-latest env: HUGO_VERSION: 0.115.3 steps: - name: Install Hugo CLI run: | wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \\ \u0026\u0026 sudo dpkg -i ${{ runner.temp }}/hugo.deb - name: Install Dart Sass run: sudo snap install dart-sass - name: Checkout uses: actions/checkout@v3 with: submodules: recursive fetch-depth: 0 - name: Setup Pages id: pages uses: actions/configure-pages@v3 - name: Install Node.js dependencies run: \"[[ -f package-lock.json || -f npm-shrinkwrap.json ]] \u0026\u0026 npm ci || true\" - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: | hugo \\ --gc \\ --minify \\ --baseURL \"${{ steps.pages.outputs.base_url }}/\" - name: Upload artifact uses: actions/upload-pages-artifact@v1 with: path: ./public # Deployment job deploy: environment: name: github-pages url: ${{ steps.deployment.outputs.page_url }} runs-on: ubuntu-latest needs: build steps: - name: Deploy to GitHub Pages id: deployment uses: actions/deploy-pages@v2 Commit the change to local repository and push to GitHub. Click on Actions from GitHub repository. The orange circle indicates the workflow is running now: After the workflow finished, the indicator will change to a green check. Click on the workflow. the url to mysite will be shown: Click on the url to access mysite that is being hosted by GitHub Pages now. Normally, the URL should be in the format https://$GitHubUsername.github.io/$RepositoryName1. However, I have been using a custom domain which is why my URL is different. From now on, whenever a change is made to this GitHub repository, GitHub will rebuild mysite and deploy the changes. If you have any questions or advice, leave me a comment below and I will try my best to respond! This an indirect way of hosting Hugo site from private repository.¬†‚Ü©Ô∏é ","date":"Wed, Jul 19, 2023","objectID":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/:5:0","series":null,"tags":["Hugo","GitHub","GitHub Pages"],"title":"How to Create a Free Personal Blog Using Hugo and GitHub Pages","uri":"/posts/how-to-create-a-personal-blog-using-hugo-and-github-pages/#host-on-github-pages"},{"categories":null,"content":"Hello. This is my first post. ","date":"Tue, Jul 18, 2023","objectID":"/posts/my-first-post/:0:0","series":null,"tags":null,"title":"My first post","uri":"/posts/my-first-post/#"}]